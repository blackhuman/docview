// This is a sample model to get you started.

/// A sample data source using local sqlite db.
datasource db {
    provider = 'postgresql'
    url = env('DATABASE_URL')
    directUrl = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

plugin hooks {
  provider = '@zenstackhq/swr'
  target = 'react'
  output = 'src/lib/hooks'
}

/// User model
model User {
    id       String @id @default(cuid())
    email    String @unique @email @length(6, 32)
    password String? @password @omit
    entries    Entry[]

    // everybody can signup
    @@allow('create', true)

    // full access by self
    @@allow('all', auth() == this)
}

/// Post model
model Entry {
    id        String   @id @default(cuid()) // so as OSS path prefix
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title     String   @length(1, 256) // for display
    originalFile      String? // original file before parsed, e.g. "xx.epub" file
    readingPath String? // user last reading path
    entryType String
    author    User     @relation(fields: [authorId], references: [id]) @default(auth())
    authorId  String

    // full access by author
    @@allow('all', author == auth())
}

enum JobStage {
    INIT
    PRE_PROCESSING // before processing, e.g. unzip
    PROCESSING // processing, e.g. parse
    POST_PROCESSING // after processing
    DONE
}

model Job {
    id String @id @default(cuid())
    entry Entry @relation(fields: [entryId], references: [id])
    entryId String @unique
    progress Int @default(0)
    stage JobStage @default(INIT)
    done Boolean
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // full access by author
    @@allow('all', entry.author == auth())
}
